@precedence {
  highl @left
}

@top Criticmarkup { expression* }

//@skip {
//  space
//}

//@skip {} {
//  critic {
//    (Addition | Deletion | Substitution | Comment | Highlight)
//  }
//}

expression {
  Addition |
  Deletion |
  Substitution |
  Comment |
  Highlight
}



Addition {
  startAdd string endAdd
}
Deletion {
  startDel string endDel
}
Substitution {
  startSubs string divideSubs string endSubs
}
Comment {
  startComm string endComm
}
Highlight {
  startHighl string endHighl !highl Comment?
}


@tokens {

  startAdd { "{++" }
  endAdd { "++}" }
  startDel { "{--" }
  endDel { "--}" }
  startSubs { "{~~" }
  divideSubs { "~>" }
  endSubs { "~~}" }
  startComm { "{>>" }
  endComm { "<<}" }
  startHighl { "{==" }
  endHighl { "==}" }

  string { (char)+ }
  space { std.whitespace+ }
  char { $[\u{20}\u{21}\u{23}-\u{5b}\u{5d}-\u{10ffff}] | "\\" esc }
  esc  { $["\\\/bfnrt] | "u" hex hex hex hex }
  hex  { $[0-9a-fA-F] }

  newline { $[\r\n] }
}

@detectDelim

//@external tokens newlines from "./tokens" { newline, newlineBracketed, newlineEmpty, eof }

