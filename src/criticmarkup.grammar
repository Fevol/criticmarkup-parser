@precedence {
  highl @left,
  Highlight,
  Addition,
  Deletion,
  Comment,
  Substitution,
  InnerText
}

@top Criticmarkup { expression* }

@skip {
  char | space | newline
}

@skip {} {
  critic {
    (Addition | Deletion | Substitution | Comment | Highlight )
    }
}

expression {
  Addition |
  Deletion |
  Substitution |
  Comment |
  Highlight //|
  //Text
}


Addition {
  startAdd InnerText endAdd
}
Deletion {
  startDel InnerText endDel
}
Substitution {
  startSubs InnerText DivideSubs InnerText endSubs
}
Comment {
  startComm InnerText endComm
}
Highlight {
  startHighl InnerText endHighl !highl Comment?
}


@tokens {

  startAdd { "{++" }
  endAdd { "++}" }
  startDel { "{--" }
  endDel { "--}" }
  startSubs { "{~~" }
  DivideSubs { "~>" }
  endSubs { "~~}" }
  startComm { "{>>" }
  endComm { "<<}" }
  startHighl { "{==" }
  endHighl { "==}" }

  @precedence {
  //  startAdd,
  //  endAdd,
  //  startDel,
  //  endDel,
  //  startSubs,
  //  DivideSubs,
  //  endSubs,
  //  startComm,
  //  endComm,
  //  startHighl,
  //  endHighl,
    InnerText,
    char,
    space,
    newline
  }

  //Text {
  //  ( ![{+}]+ | ![{-}]+ | ![{~>}]+ | ![{=}]+ | ![{><}]+ )
  //}
  InnerText { char+ }
  space { std.whitespace+ }
  char { $[\u{20}\u{21}\u{23}-\u{5b}\u{5d}-\u{10ffff}] | "\\" esc }
  esc  { $["\\\/bfnrt] | "u" hex hex hex hex }
  hex  { $[0-9a-fA-F] }

  newline { $[\r\n] }
}

@detectDelim

//@external tokens newlines from "./tokens" { newline, newlineBracketed, newlineEmpty, eof }

